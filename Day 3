#Day 3 Challenge focused on fixing code when the items are not intialized

#Code Fix #1
#Original Code
def count_down(start_number):
  while (current > 0):
    print(current)
    current -= 1
  print("Zero!")

count_down(3)

#Fixed Code 
def count_down(start_number):
  current = 3
  while (current > 0):
    print(current)
    current -= 1
  print("Zero!")

count_down(3)
#Output 3, 2, 1, Zero!


#Code Fix #2
#Original Code
x = 1
sum = 0
while x < 10:
	sum = sum + x
	x = x + 1
product = 1
while x < 10:
    product = product * x
    x = x + 1
print(sum, product)
#Ouput 45 1-->incorrect because x for product has not been defined for the second block, so x=10 for the second block which is false

#Correct Code
x = 1
sum = 0
while x < 10:
	sum = sum + x
	x = x + 1
product = x
while x < 10:
    product = product * x
    x = x + 1
print(sum, product)
#Output 45, 10-->this is correct

#In the IDLE
def sum():
    x = 1
    sum = 0
    while x < 10:
        sum = sum + x
        x = x + 1
        def product():
            product = x
            while x < 10:
                product = product * x
                x = x + 1
    print(sum, product)

#Code Fix #3
#Original Code
def print_range(start, end): 
    #loop through the numbers from start to end
    n = start
    while n <=end: 
        print (n)

print_range (1,5) 
#Output should be 1 2 3 4 5 each number on its own line

#Correct Code
def print_range(start, end): 
    #loop through the numbers from start to end
    n = start
    while n <=end: 
        print (n)
        n=n+1 #or n+=1# #Without incrementing through n, this will always be true-->must remember to increment through an iterative
print_range (1,5) 